from TM1py.Services import TM1Service
import pandas as pd

def get_parent_child_with_attributes(tm1_server, dimension_name, parent_attr, child_attr):
  """
  Retrieves parent-child relationships with user-specified attributes for a dimension.

  Args:
      tm1_server: TM1 Service object.
      dimension_name: Name of the dimension.
      parent_attr: Attribute of the parent element.
      child_attr: Attribute of the child element.

  Returns:
      pandas.DataFrame: Dataframe containing parent, parent_attr, child, and child_attr.
  """
  # Get all elements and their attributes in a single call
  elements_df = pd.DataFrame(tm1_server.dimensions.elements.get_all_with_attributes(
      dimension_name, attributes=[parent_attr, child_attr]))

  # Handle missing parents
  elements_df["Parent"] = elements_df["Parent"].apply(lambda p: p.name if p else None)

  # Select relevant columns and rename for clarity
  df = elements_df[["Parent", parent_attr, "Name", child_attr]]
  df.rename(columns={"Name": "Child"}, inplace=True)

  return df

# Example usage (same as previous example)
